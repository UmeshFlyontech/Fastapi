[
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Blog",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Blog(BaseModel):\n    title: str\n    body: str\n    published: Optional[bool]\n@app.post(\"/blog\")\ndef create_blog(request: Blog):\n    return request\n    return {\"Data\": \"Blog is created\"}",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def index(limit: int=20, published: bool=True, sort: Optional[str]= None):\n    if published:\n        return {'Data': f'{limit} published blogs from the DB'}\n    else:\n        return {'Data': f'{limit} blogs from the DB'}\n@app.get(\"/blog/unpublished\")\ndef  unpublished():\n    return {\"Data\": \"All unpublished blogs\"}\n@app.get(\"/blog/{id}\")\ndef blog(id: int):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 2,
            "peekOfCode": "def  unpublished():\n    return {\"Data\": \"All unpublished blogs\"}\n@app.get(\"/blog/{id}\")\ndef blog(id: int):\n    return {\"Data\":id}\n@app.get(\"/blog/{id}/comment\")\ndef comment(id, limit=10):\n    return limit\n    return {\"Data\":{'1', '2'}}\nclass Blog(BaseModel):"
        },
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def  unpublished():\n    return {\"Data\": \"All unpublished blogs\"}\n@app.get(\"/blog/{id}\")\ndef blog(id: int):\n    return {\"Data\":id}\n@app.get(\"/blog/{id}/comment\")\ndef comment(id, limit=10):\n    return limit\n    return {\"Data\":{'1', '2'}}\nclass Blog(BaseModel):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "blog",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def blog(id: int):\n    return {\"Data\":id}\n@app.get(\"/blog/{id}/comment\")\ndef comment(id, limit=10):\n    return limit\n    return {\"Data\":{'1', '2'}}\nclass Blog(BaseModel):\n    title: str\n    body: str\n    published: Optional[bool]",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "comment",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def comment(id, limit=10):\n    return limit\n    return {\"Data\":{'1', '2'}}\nclass Blog(BaseModel):\n    title: str\n    body: str\n    published: Optional[bool]\n@app.post(\"/blog\")\ndef create_blog(request: Blog):\n    return request",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "create_blog",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def create_blog(request: Blog):\n    return request\n    return {\"Data\": \"Blog is created\"}",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\n@app.get(\"/blog\")\ndef index(limit: int=20, published: bool=True, sort: Optional[str]= None):\n    if published:\n        return {'Data': f'{limit} published blogs from the DB'}\n    else:\n        return {'Data': f'{limit} blogs from the DB'}\n@app.get(\"/blog/unpublished\")\ndef  unpublished():\n    return {\"Data\": \"All unpublished blogs\"}",
        "detail": "main",
        "documentation": {}
    }
]